<script>
  function setupCopyButtons() {
    const codeBlocks = document.querySelectorAll('pre code');
    
    codeBlocks.forEach((codeBlock) => {
      // Create wrapper if it doesn't exist
      let wrapper = codeBlock.parentElement;
      if (!wrapper) return;
      
      if (!wrapper.classList.contains('code-block-wrapper')) {
        const newWrapper = document.createElement('div');
        newWrapper.className = 'code-block-wrapper';
        wrapper.insertBefore(newWrapper, codeBlock);
        newWrapper.appendChild(codeBlock);
        wrapper = newWrapper;
      }

      // Add copy button if it doesn't exist
      if (!wrapper.querySelector('.copy-code-button')) {
        const copyButton = document.createElement('button');
        copyButton.className = 'copy-code-button';
        copyButton.setAttribute('aria-label', 'Copy code');
        copyButton.innerHTML = `
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
            <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
          </svg>
        `;

        copyButton.addEventListener('click', async () => {
          try {
            const text = codeBlock.textContent || '';
            await navigator.clipboard.writeText(text);
            
            // Store original button content
            const originalContent = copyButton.innerHTML;
            
            // Show feedback
            copyButton.innerHTML = `
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <polyline points="20 6 9 17 4 12"></polyline>
              </svg>
            `;
            copyButton.classList.add('copied');
            
            // Restore original content after 2 seconds
            setTimeout(() => {
              copyButton.innerHTML = originalContent;
              copyButton.classList.remove('copied');
            }, 2000);
          } catch (err) {
            console.error('Failed to copy text: ', err);
          }
        });

        wrapper.appendChild(copyButton);
      }
    });
  }

  // Run on initial load
  if (typeof document !== 'undefined') {
    setupCopyButtons();
  }

  // Run after view transitions
  document.addEventListener('astro:page-load', setupCopyButtons);
</script>

<style is:global>
  .code-block-wrapper {
    position: relative;
    margin: 1rem 0;
  }

  .copy-code-button {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
    padding: 0.5rem;
    background: rgba(255, 255, 255, 0.1);
    border: none;
    border-radius: 0.25rem;
    cursor: pointer;
    color: #fff;
    transition: all 0.2s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .copy-code-button:hover {
    background: rgba(255, 255, 255, 0.2);
  }

  .copy-code-button.copied {
    background: rgba(0, 255, 0, 0.2);
  }

  .copy-code-button svg {
    width: 1rem;
    height: 1rem;
  }

  pre {
    margin: 0;
    padding: 1rem;
    background: #1a1a1a;
    border-radius: 0.5rem;
    overflow-x: auto;
  }

  code {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    font-size: 0.875rem;
    line-height: 1.5;
  }

  :global(.dark) .copy-code-button {
    background: rgba(255, 255, 255, 0.1);
  }

  :global(.dark) .copy-code-button:hover {
    background: rgba(255, 255, 255, 0.2);
  }

  :global(.dark) .copy-code-button.copied {
    background: rgba(0, 255, 0, 0.2);
  }
</style> 