<button id="theme-toggle" aria-label="Toggle theme">
	<svg id="sun-icon" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
		<circle cx="12" cy="12" r="5"/>
		<line x1="12" y1="1" x2="12" y2="3"/>
		<line x1="12" y1="21" x2="12" y2="23"/>
		<line x1="4.22" y1="4.22" x2="5.64" y2="5.64"/>
		<line x1="18.36" y1="18.36" x2="19.78" y2="19.78"/>
		<line x1="1" y1="12" x2="3" y2="12"/>
		<line x1="21" y1="12" x2="23" y2="12"/>
		<line x1="4.22" y1="19.78" x2="5.64" y2="18.36"/>
		<line x1="18.36" y1="5.64" x2="19.78" y2="4.22"/>
	</svg>
	<svg id="moon-icon" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
		<path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"/>
	</svg>
</button>

<style>
	#theme-toggle {
		position: fixed;
		top: 1rem;
		right: 1rem;
		padding: 0.25rem;
		border-radius: 50%;
		border: none;
		background: transparent;
		color: var(--text);
		cursor: pointer;
		transition: transform 0.3s ease;
	}

	#theme-toggle:hover {
		transform: scale(1.1);
	}

	.hidden {
		display: none;
	}
</style>

<script>
	// Optimized theme toggle functionality
	const handleThemeToggleClick = () => {
		const element = document.documentElement;
		const isDark = element.classList.toggle("dark");
		const theme = isDark ? "dark" : "light";

		// Update localStorage if available
		if (typeof localStorage !== 'undefined') {
			localStorage.setItem("theme", theme);
		}

		// Update icons efficiently
		const sunIcon = document.getElementById('sun-icon');
		const moonIcon = document.getElementById('moon-icon');
		if (isDark) {
			sunIcon?.classList.remove('hidden');
			moonIcon?.classList.add('hidden');
		} else {
			sunIcon?.classList.add('hidden');
			moonIcon?.classList.remove('hidden');
		}
	};

	const setupTheme = () => {
		const savedTheme = typeof localStorage !== 'undefined' ? localStorage.getItem('theme') : null;
		const prefersDark = typeof window !== 'undefined' && window.matchMedia ?
			window.matchMedia('(prefers-color-scheme: dark)').matches : false;

		// Determine theme: saved > system preference > default to dark
		const theme = savedTheme || (prefersDark ? 'dark' : 'light');

		// Apply theme
		const element = document.documentElement;
		const isDark = theme === 'dark';
		element.classList.toggle('dark', isDark);

		// Update icons
		const sunIcon = document.getElementById('sun-icon');
		const moonIcon = document.getElementById('moon-icon');
		if (isDark) {
			sunIcon?.classList.remove('hidden');
			moonIcon?.classList.add('hidden');
		} else {
			sunIcon?.classList.add('hidden');
			moonIcon?.classList.remove('hidden');
		}

		// Save theme if not already saved
		if (typeof localStorage !== 'undefined' && !savedTheme) {
			localStorage.setItem('theme', theme);
		}

		// Setup click handler (only once)
		const themeToggleButton = document.getElementById("theme-toggle");
		if (themeToggleButton && !themeToggleButton.hasAttribute('data-theme-handler')) {
			themeToggleButton.setAttribute('data-theme-handler', 'true');
			themeToggleButton.addEventListener("click", handleThemeToggleClick);
		}
	};

	// Run on initial load and after view transitions
	if (typeof document !== 'undefined') {
		if (document.readyState === 'loading') {
			document.addEventListener('DOMContentLoaded', setupTheme);
		} else {
			setupTheme();
		}
		document.addEventListener('astro:page-load', setupTheme);
	}
</script> 