---
import type { CollectionEntry } from 'astro:content';

interface Props {
	posts: CollectionEntry<'blog'>[];
}

const { posts } = Astro.props;

// Group posts by year and month
const postsByYear = posts.reduce((acc, post) => {
	const year = post.data.pubDate.getFullYear();
	const month = post.data.pubDate.getMonth();
	
	if (!acc[year]) {
		acc[year] = {};
	}
	if (!acc[year][month]) {
		acc[year][month] = [];
	}
	acc[year][month].push(post);
	return acc;
}, {} as Record<number, Record<number, CollectionEntry<'blog'>[]>>);

// Sort years and months in descending order
const sortedYears = Object.keys(postsByYear).sort((a, b) => Number(b) - Number(a));
---

<aside id="sidebar" class="sidebar">
	<nav>
		<h2>Blog Posts</h2>
		<div class="blog-archive">
			{sortedYears.map((year) => (
				<div class="year-section">
					<h3 class="year">{year}</h3>
					{Object.keys(postsByYear[Number(year)])
						.sort((a, b) => Number(b) - Number(a))
						.map((month) => (
							<div class="month-section">
								<h4 class="month">
									{new Date(0, Number(month)).toLocaleString('default', { month: 'long' })}
								</h4>
								<ul>
									{postsByYear[Number(year)][Number(month)].map((post) => (
										<li>
											<a href={`/blog/${post.slug}`}>{post.data.title}</a>
										</li>
									))}
								</ul>
							</div>
						))}
				</div>
			))}
		</div>
	</nav>
</aside>
<div id="sidebar-overlay" class="sidebar-overlay"></div>

<style>
	.sidebar {
		position: fixed;
		top: 0;
		left: calc(-1 * var(--sidebar-width));
		width: var(--sidebar-width);
		height: 100vh;
		background: var(--background);
		box-shadow: none;
		transition: left 0.3s ease;
		z-index: 1001;
		padding: 2rem;
		visibility: hidden;
	}

	.sidebar.active {
		left: 0;
		visibility: visible;
		box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
	}

	.sidebar-overlay {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background: rgba(0, 0, 0, 0.5);
		opacity: 0;
		visibility: hidden;
		transition: opacity 0.3s ease, visibility 0.3s ease;
		z-index: 1000;
	}

	.sidebar-overlay.active {
		opacity: 1;
		visibility: visible;
	}

	.sidebar nav {
		margin-top: 2rem;
	}

	.sidebar h2 {
		margin: 0;
		font-size: 1.5rem;
		color: var(--text);
	}

	.sidebar ul {
		list-style: none;
		padding: 0;
		margin: 1rem 0;
	}

	.sidebar li {
		margin: 0.5rem 0;
	}

	.sidebar a {
		color: var(--text);
		text-decoration: none;
		font-size: 1.1rem;
		transition: color 0.2s ease;
	}

	.sidebar a:hover {
		color: rgb(var(--accent));
	}

	.blog-archive {
		margin-top: 1rem;
	}

	.year-section {
		margin-bottom: 1.5rem;
	}

	.year {
		font-size: 1.2rem;
		font-weight: 600;
		color: var(--text);
		margin-bottom: 0.5rem;
	}

	.month-section {
		margin-left: 1rem;
		margin-bottom: 1rem;
	}

	.month {
		font-size: 1rem;
		font-weight: 500;
		color: var(--text);
		margin-bottom: 0.25rem;
		opacity: 0.8;
	}

	.month-section ul {
		margin-left: 1rem;
	}

	.month-section li {
		margin: 0.25rem 0;
	}

	.month-section a {
		font-size: 0.95rem;
		opacity: 0.9;
	}

	.month-section a:hover {
		opacity: 1;
	}
</style> 